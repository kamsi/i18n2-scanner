'use strict';

var _ = require('mano').i18n.bind('documents')
	, baseUrl = url, renderFile, renderFormApplicationFile;

renderFile = function (options) {
	var submission = options.observable.object;

	return section(h2(submission.label),
		div(this.valueDOM = ul({ class: 'documents' })),
		div({ class: 'btn-upload' }, label("+ Choose file", this.control = input({ type: 'file' }))),
		a({ class: 'label pull-right', onclick: 'window.scroll(0, 0)' }, _('Top', 'Tops', 2))
	);
};

renderFormApplicationFile = function (options) {
	var title = options.observable.descriptor.label;

	return section(h2(title),
		div(this.valueDOM = ul({ class: 'documents' })),
		div({ class: 'btn-upload' }, label("+ Choose file", this.control = input({ type: 'file' }))),
		a({ class: 'label pull-right', onclick: 'window.scroll(0, 0)' }, _('Top')));
};

exports.main = function () {
	var user = this.user, url = baseUrl.bind(this.root);

	div(_if(not(eq(user._guideStatus, 1)), section({ class: 'prev-empty-alert' },
		p(a({ href: url() }, _("Please fill the Guide first"))))));

	section({ class: 'subheader' }, h1(span({ class: 'step' }, "3"),
			_("UPLOAD YOUR DOCUMENTS")),
		p({ class: 'bigfont' },
			_("All the mandatory documents must be uploaded."),
			br(),
			small("The following formats are accepted: PDF, JPEG, JPG and PNG, Documents may not" +
				" exceed 30MB each.")));

	div({ class: _if(not(eq(user._guideStatus, 1)), 'disabled') },
		ul({ class: 'submissions' },
			user.requiredSubmissions.toArray(), function (submission) {
				return li(form({ action: url('documents'), method: 'post',
						enctype: 'multipart/form-data', autoSubmit: true },
					div(input({ dbjs: submission._files, render: renderFile }))));
			}),
		div(section({ class: 'prev-print-alert' }, p('The filled single form is automatically' +
				' generated by the system. Click button to' +
				' generate and print. The form must be signed by all Directors, the Company Secretary' +
				' and all Subscribers of the company or their authorised representatives. Once signed,' +
				' please upload it onto the system using the button below.'),
			a({ class: 'btn btn-white',
					target: "_blank", href: url('print-registration-form') },
				i({ class: 'icon-download' }), ' ',
				"View and print form"))),
		div(_if(and(user.signedFormFiles._size, eq(user._isSignedFormFilesUpToDate, false)),
			div(form({ action: url('signed-application-form-uptodate'),
					method: 'post' },
				label(user.getDescriptor('isSignedFormFilesUpToDate').label,
					input({ dbjs: user._isSignedFormFilesUpToDate })),
				input({ class: "btn btn-danger", type: 'submit', value: _("Save") }))))),
		ul({ class: 'submissions' },
			li(form({ action: url('signed-application-form'), method: 'post',
					enctype: 'multipart/form-data', autoSubmit: true },
				div(input({ dbjs: user._signedFormFiles, render: renderFormApplicationFile }))))),
		div({ class: 'disabler' }));

	div({ class: 'row' }, _if(eq(user._documentsStatus, 1), section({ class: 'nextSection' },
		a({ href: url('pay'), class: 'btn btn-large btn-danger' }, _("Continue to next step")))));
};
